c
navigation
ap navigation
c
Hash[[navigation_alias, navigation].transpose]
Hash[[navigation, navigation_alias].transpose]
Hash[[navigation, navigation_alias]]
navigation_alias
navigation
navigation_alias = navigation.map{|x| x.gsub('_',' ').gsub('path','').capitalize}
navigation.map(&gsub('_','')
navigation.map(&:gsub('_',''))
navigation.map(&:gsub('_'))
navigation.map(&:gsub)
navigation.map(&:class)
navigation.map(&:class())
navigation.map(&class())
navigation.map(&class)
navigation.map(&gsub('_',''))
navigation.map(gsub('_',''))
navigation_alias = navigation.map{|x| x.gsub('_',' ').gsub('path','').capitalize}
navigation_alias = navigation.map{|x| x.gsub('_',' ').gsub('path','')}
navigation_alias = navigation.map{|x| x.gsub('_','').gsub('path','')}
navigation_alias = navigation.each(&:gsub('_',''))
navigation_alias = navigation.each(&:gsub)
navigation_alias = navigation.each()
navigation_alias = navigation.map(&.gsub)
navigation_alias = navigation.map(&gsub)
navigation_alias = navigation.map(&:gsub'_','')
navigation_alias = navigation.map(&:gsub("_",""))
navigation
c
navigation
c
navigation.map{|x| p x.gsub('_',' ').gsub('path','').capitalize}
navigation.map{|x| p x.gsub('_',' ').capitalize}
navigation.map{|x| p x.gsub('_',' ')}
navigation.map{|x| p x}
navigation.map(&:gsub('_',' '))
navigation.map(&:gsub('_',' ').capitalize)
navigation
navigation_alias
ap Hash[[navigation, navigation_alias].transpose]
ap _
Hash[[navigation, navigation_alias].transpose]
navigation_alias
navigation
navigation_alias = navigation.map(&:to_sym)
navigation.map(&:to_sym)
navigation
routes.each { |s| navigation << s unless except_routes.any? { |e| s.match?(e) } }
routes
except_routes
except_routes = er = [/rails/, /url/, /turbo/, /new/, /edit/, /\w+((?!s).)_path/]
routes = Rails.application.routes.named_routes.helper_names
routes = Rails.application.routes.named_routes.helper_names~
navigation = []
r
e
r
er
n
r
er
c
e
er
eer
c
  discount = membership ? membership.type_membership.discount : 0
  membership = rent_detail.membership_id? ? rent_detail.membership : nil
  discount = rent_detail.membership_id? ? rent_detail.membership_discount : 0
c
RentDetail.second.membership
RentDetail.second
RentDetail.all.map{|x| puts x.membership_id?}
RentDetail.all
ap rent_detail.membership_id?
ap rent_detail.public_methods
ap rent_detail.methods
ap _
rent_detail.methods
rent_detail.methos
rent_detail.class
rent_detail.membership?
discount = rent_detail.membership? ? rent_detail.membership_discount : 0
[200~discount = rent_detail.membership? ? rent_detail.membership_discount : 0~
rent_detail.membership
rent_detail
order
c
navigation
